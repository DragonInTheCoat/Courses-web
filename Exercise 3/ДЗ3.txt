1. Напишите регулярное выражение для получения всех имён из текста:
	"прачка Палашка, толстая и рябая девка, и кривая коровница Акулька как-то согласились в одно время кинуться матушке в ноги".
	
2.	Поймите, как работает выражение: '1234567890'.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,')

3. Напишите функцию, которая проверяет корректность ввода номера телефона.
	Ввод считается корректным, если содержит 11 цифр, первая из которых 7 или 8.
	Примеры корректных телефонов: '89263452312', 'Мой телефон: 8 (916) 321-2331', '+7 925 321-12-32, +7 123 456 65 65'	
	Если ввод некорректен - предлагается ввести номер ещё раз.
	Если корректен, отображает его в формате: +7 XXX XXX-XX-XX.
	Для проверки и форматирования использовать регулярные выражения.
	
4. Напишите функцию, очищающую переданный текст от повторяющихся пробелов. Регулярным выражением.

5. Добавьте массиву метод, возвращающий новый массив, содержащий каждый второй элемент исходного массива так, чтобы код ниже работал корректно.
	// Вот тут нужно что-то написать, а строки ниже трогать нельзя.
	let arr = [1,2,3,4,5,6];
	alert( arr.get2() ); // '2,4,6'

6. Дан объект
	let tree = {a:6, b:'test', c:{d:42, e:{g:'quest', h:{k:17, l:44}}, f:{i:32, j:{m:[23, 17, {n:'end'}]}}}};	
	Добавьте ему такой метод, чтобы при вызове alert(tree) выводилась бы строка, содержащая список его свойств: "{a:6, b:'test', c:{d:42, e:{g:'quest', h:{k:17, l:44}}, f:{i:32, j:{m:[23, 17, {n:'end'}]}}}};"
	Добавьте ему метод, возвращающий полную копию этого объекта, чтобы сработал вызов: let otherTree = tree.clone();

7. Создайте структуру, описывающую тип Человек, со свойствами: Имя, Дата рождения (тип Date).
	Создайте структуру Ученик, наследующую от Человека, с собственными свойствами: Курс, Прослушано уроков. И методом, при вызове которого увеличивается на 1 кол-во прослушанных уроков.
	Создайте структуру Программист, с собственными свойством E-mail, при записи значения в которое происходит проверка на валидность e-mail адреса (регуляркой) и, если адрес невалиден, значение свойства не меняется.

8. Создайте структуру, описывающую тип Снежинка, со свойствами: Id, Координата по вертикали, Размер, Скорость падения, и методом fall.
	В конструкторе Координату устанавливать в 0, Id - номер снежинки, Размер и Скорость падения определять случайным образом от 1 до 10. Также из конструктора нужно выводить в консоль строку: Создал снежинку: и дальше все параметры созданной снежинки.
	Метод fall должен запускаться каждую секунду и пересчитывать Координату снежинки с учётом Скорости падения и выводить в консоль Id: Координата. Если Координата становится больше 100, метод fall вызывать не нужно.	
	С интервалом в 5 секунд создать 5 снежинок.

9. Найти подходящий процесс в реальном мире, который можно описать терминами объектов, свойств и методов. Смоделировать этот процесс. Здорово будет, если получится применить наследование.
	Процесс должен включать в себя как минимум 2 метода, изменяющие свойства объектов.

10. Пройти игру https://alexnisnevich.github.io/untrusted/


Задача:
описать объект Диспетчер, содержащий в себе массив самолётов (и их генератор), и 6 полос. (полоса может быть свободна или не свободна)

описать конструктор объекта Самолёт, содержащий его название, скорость, время на посадку и время на взлёт. Добавить свойство возможности на посадку и соответствующий метод запроса диспетчеру, опрашивающий начиная со старта каждую секунду.
Написать метод посадки, вызывающийся при возможности сесть, через 10 секунд после посадки вызвать метод "освободить полосу", который через 10 секунд оповестит диспетчера о свободной полосе.

описать конструктор объекта Истребитель, наследующийся от Самолёта.

описать конструктор объекта Боинг, наследующийся от Самолёта.