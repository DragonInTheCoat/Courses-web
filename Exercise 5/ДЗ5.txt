1. Реализуйте ввод телефона в текстовое поле поле по маске +7 *** ***-**-**, где * - любая цифра.
	Другими словами, при вводе любой строки она должна быть преобразована к телефонному номеру или его части.
	  
	Пример:
	Пользователь вводит номер 89261234567.
	После ввода первой цифры - 8 программа понимает, что это 8 и вместо него пишет "+7 ".
	После ввода второй цифры - 9 в поле ввода: "+7 9"
	...
	После ввода четвёртой цифры - 6 в поле ввода: "+7 926 "
	...
	После ввода девятой цифры - 5 в поле ввода: "+7 926 123-45-"
	...
	После ввода одиннадцатой цифры - 7 в поле ввода: "+7 926 123-45-67"

2. Создайте элемент формы для ввода уникальных идентификаторов:
	- в текстовом поле можно ввести список идентификаторов через запятую
	- идентификатор может содержать любое количество символов
	- после изменения значения текстового поля в нём остаются только уникальные идентификаторы
	- после изменения значения текстового поля над ним отображаются контейнеры, содежащие уникальные идентификтаоры
	- каждый такой контейнер кроме текста идентификатора должен содержать кнопку с крестиком
	- при нажатии на кнопку с крестиком этот идентификатор должен пропадать из строки и контейнер должен исчезать
	
	Пример:
		В строку записываем: "Маша, Паша, Саша, Паша, Миша, Саша, Маша, Даша" и убираем фокус.
		- в строке остаётся: "Маша, Паша, Саша, Даша"
		- над строкой появляется 4 контейнера с крестиками, содержащие имена: "Маша, Паша, Саша, Даша"
		- при нажатии на крестик у имени Саша этот контейнер пропадает и в строке остаётся: "Маша, Паша, Даша"
		
3. Задача: создать интерактивную форму, которая позволяет управлять списком учеников и перечнем посещаемых предметов с указанием форм обучения.
	
	План разработки:
	Создать класс "Ученик", на основе которого создаётся объект со следующими атрибутами: фамилия, имя, отчество, телефон, тезисная характеристика, возраст, перечень посещаемых предметов с указанием форм обучения: в классе, научная экспедиция, собственный проект.

		{
		lname:		'Иванов',
		fname:		'Иван',
		mname:		'Иванович',
		phone:		'+7 916 322-22-32',
		tags:		['геометр', 'любит блинчики', 'без вредных привычек', 'велосипедист'],		
		age:		13,
		subjects:	{
			'Математика':		{class: 1, expedition: 0, project: 0},
			'Физика':			{class: 1, expedition: 1, project: 0},
			'Литература':		{class: 1, expedition: 0, project: 1},
			'Программирование':	{class: 1, expedition: 0, project: 1},
			'История':			{class: 0, expedition: 1, project: 0},
			'Русский язык':		{class: 1, expedition: 0, project: 0},
			'Физкультура':		{class: 1, expedition: 0, project: 0},
			'Труд':				{class: 1, expedition: 0, project: 1},
			...
			}
		}
	
	Ключи объекта subjects хранятся в массиве subjects, который является атрибутом объекта subjectsCollection. Кроме того у объекта subjectsCollection должно быть реализовано 2 метода: addSubject - который добавляет новый предмет в коллекцию и removeSubject, который удаляет предмет из коллекции. При этом в списке предметы не должны повторяться. 
	
	Примерно так:
	let subjectsCollection = {
		subjects: ['Математика', 'Физика', ...]
		addSubject: function(subject){ ... }
		...
	}
	
	В класс "Ученик" добавить статический метод для создания ученика, передав в него фио, телефон, тэги, возраст. Все значения в subjects при этом проставляются нолями.
	
	На базе класса "Ученик" при инициализации программы нужно создать массив объектов, содержащих личные данные нескольких учеников.
=======================================
	После этого необходимо вывести на страницу список учеников в формате: "Иванов И.И.". Для этого можно в класс Ученик добавить метод getShortFio, который будет отдавать ФИО в нужном формате.
	После списка следует отображать кнопку "Добавить ученика".
	
	По нажатию на ФИО или кнопку добавления ученика появляется форма, содержащая поля для ввода данных ученика. Телефон необходимо вводить по маске, как в 1 задаче. Тезисную характеристику (tags) необходимо вводить как в задаче 2. Для редактирования перечня посещаемых предметов необходимо использовать чекбоксы. Например так:
	<table>
		<tr>
			<th>Предмет</th>
			<th>В классе</th>
			<th>Экспедиция</th>
			<th>Свой проект</th>
		</tr>
		<tr>
			<th>Математика</th>
			<td><input type="checkbox"></td>
			<td><input type="checkbox"></td>
			<td><input type="checkbox"></td>
		</tr>
		<tr>
			<th>Физика</th>
			<td><input type="checkbox"></td>
			<td><input type="checkbox"></td>
			<td><input type="checkbox"></td>
		</tr>
		...
	
	Внизу, под каждой колонкой, следует добавить возможность автоматической простановки всех чекбоксов в этом столбце. Например:
		<tr>
			<th>Проставить все</th>
			<td><input type="button" value="В классе"></td>
			<td><input type="button" value="Экспедиция"></td>
			<td><input type="button" value="Свой проект"></td>
		</tr>
	
	При нажатии на кнопку "В классе" отмечаются все чекбоксы в колонке "В классе", остальные остаются как есть.
	
	В конце формы должно быть 3 кнопки: Сохранить, Удалить и Клонировать.
	При нажатии на любую из этих кнопок форма исчезает, в объект вносятся необходимые изменения и список учеников на экране обновляется.
	
	----Также необходимо разработать форму, которая позволит редактировать список предметов. После его изменения должен изменяться список предметов в объекте каждого ученика. При добавлении нового предмета его флаги форм обучения у всех учеников инициализируются нолями.